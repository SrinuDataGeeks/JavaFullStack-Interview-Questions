1.  What is the use of Encapsulation?
2.  What is the diff between default and paramaterized constructor?
3.  How to achive constructor overloading?
4.  What is method overloading and adv of it?
5.  What is "this" key word and how it works?
6.  What is method overriding? what are rules to be followed while overriding a method?
7.  What is compile time & runtime pollymorphism ? which is performace orriented?
8.  What is polymorphism? What is diff between static and non-static variable?
9.  Can we override static method ?
10. What is final keyword and how we apply it?
11. What is final , finally and finalize() ?
12. What is immutatble object ? Write program to demonstrate immutable?
13. What is super keyword and super() constructor?
14. Write a program for Singleton object?
15. What is the differenct between public and protected access specifier?
16. What is the difference between abstract classes and interfaces?
17. What is the difference between catch and finally blocks?
18. What is checked and unchecked exceptions?
19. What is diff between Exception and Error?
20. What is use of throw and throws keywords?
21. Write a program to define user defined exception?
22. What is the diff between == and equals() method?
23. How to reverse the string?
24. What is StringConstantPool ? How it works?
25. What is the diff beween String , StringBuffer & StringBuilder?
26. How many ways we can create a thread? 
27. What is difference between Thread & Runnable & Callable?
28. What is sychronization? How can we implement?
29. What is volatile?
30. What is use of automic data types?
31. What is Executor Service? what is the use of it?
32. What is the use of wait() and notify() methods?
33. Can we call wait() method outside the sychronized block?
34. Write a Producer and Consumer program?
35. What is diff between sleep() and wait() method ?
36. What is deadlock? write a program to create a deadlock?
37. Expaling about thread life cycle?
38. What is serilization ? How to implement it?
39. What is transient keyword? what is the use of it?
40. What is cloning and how to implement in java?
41. What is annonymous inner class?
42. Explaing about ArrayList and LinkedList ? what is the difference between them?
43. For accessing elements which is faster ArrayList or LinkedList?
44. How HashMap works ?
45. How Hashtable works?
46. Explain about Set data structure?
47. Explain about Map data structure?
48. What is the difference between HashMap and ConcurrentHashMap?
49. What is the difference between HashMap and HashTable?
50. How to sort the user defined objects in LinkedList or ArrayList?
51. What is hashing ? what is hash collision? how to overcome it?
52. Explain about JVM architecture?
53. What is Garbage Collection? How it works in java?
54. What is the contract between hascode() and equals() method?
	The contract between equals() and hashCode() is:
	 1) If two objects are equal, then they must have the same hash code. 
         2) If two objects have the same hash code, they may or may not be equal. ...
         The default implementation of hashCode() in Object class returns distinct integers for different objects.

55. Why we need to override hascode() and equals() method?
56. What is functional interface? and what is use of it?
57. what is default method ?
	https://www.javatpoint.com/java-default-methods

58. What is streaming API? How it works?
	=> Stream API is functional in nature.
	=> Stream api does not store data, it just copy the resulted data from one source to another source.
	=> Stream api does not modify the actual source(list,set,map etc).When we apply operations on source data, the stream 	   api just copies the resulted data into another source.
	=> Stream is lazy and evaluates code only when required.
	=>The elements of a stream are only visited once during the life of a stream. Like an Iterator, a new stream must be 	  generated to revisit the same elements of the source.

59. What is the diff between abstract class and interface?
	From java8 onwards we can declare default methods and static methods within a interface.
	From interface the default methods can be overriden in the child classes where are static methods con't be overriden.
	From java8 onwards interface is exposes the similar functionalities of abstract class.

	But the main difference is abstract class contains a default constructor where the instatnce variables can be initialized.
	Where as in the interface we don't have default constructor, what ever variables we declare within the interface are "public static final" varibles so they should be initialized at the time declaration only.
	
60. What is Lamda Expression? How can we work on it?
